[
	{"name": "active-class", "valueDefault": "undefined", "type": "string", "description": "Configure the active CSS class applied when the link is active. You can find more information about the active-class prop on the vue-router documentation."},
	{"name": "append", "valueDefault": "false", "type": "boolean", "description": "Setting append prop always appends the relative path to the current path. You can find more information about the append prop on the vue-router documentation."},
	{"name": "color", "valueDefault": "undefined", "type": "string", "description": "Applies specified color to the control - it can be the name of material color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). You can find list of built in classes on the colors page."},
	{"name": "dark", "valueDefault": "false", "type": "boolean", "description": "Applies the dark theme variant to the component. You can find more information on the Material Design documentation for dark themes."},
	{"name": "disabled", "valueDefault": "false", "type": "boolean", "description": "Removes the ability to click or target the component."},
	{"name": "elevation", "valueDefault": "undefined", "type": "number | string", "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page."},
	{"name": "exact", "valueDefault": "false", "type": "boolean", "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the exact prop on the vue-router documentation."},
	{"name": "exact-active-class", "valueDefault": "undefined", "type": "string", "description": "Configure the active CSS class applied when the link is active with exact match. You can find more information about the exact-active-class prop on the vue-router documentation."},
	{"name": "flat", "valueDefault": "false", "type": "boolean", "description": "Removes the card's elevation."},
	{"name": "height", "valueDefault": "undefined", "type": "number | string", "description": "Sets the height for the component."},
	{"name": "hover", "valueDefault": "false", "type": "boolean", "description": "Will apply an elevation of 4dp when hovered (default 2dp). You can find more information on the elevation page."},
	{"name": "href", "valueDefault": "undefined", "type": "string | object", "description": "Designates the component as anchor and applies the href attribute."},
	{"name": "img", "valueDefault": "undefined", "type": "string", "description": "Specifies an image background for the card. For more advanced implementations, it is recommended that you use the v-img component."},
	{"name": "light", "valueDefault": "false", "type": "boolean", "description": "Applies the light theme variant to the component."},
	{"name": "link", "valueDefault": "false", "type": "boolean", "description": "Designates that the component is a link. This is automatic when using the href or to prop."},
	{"name": "loader-height", "valueDefault": "4", "type": "number | string", "description": "Specifies the height of the loader"},
	{"name": "loading", "valueDefault": "false", "type": "boolean | string", "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it's supported by the component) or the primary color"},
	{"name": "max-height", "valueDefault": "undefined", "type": "number | string", "description": "Sets the maximum height for the component."},
	{"name": "max-width", "valueDefault": "undefined", "type": "number | string", "description": "Sets the maximum width for the component."},
	{"name": "min-height", "valueDefault": "undefined", "type": "number | string", "description": "Sets the minimum height for the component."},
	{"name": "min-width", "valueDefault": "undefined", "type": "number | string", "description": "Sets the minimum width for the component."},
	{"name": "nuxt", "valueDefault": "false", "type": "boolean", "description": "Specifies the link is a nuxt-link. For use with the nuxt framework."},
	{"name": "outlined", "valueDefault": "false", "type": "boolean", "description": "Removes card elevation shadow and adds a thin border."},
	{"name": "raised", "valueDefault": "false", "type": "boolean", "description": "Specifies a higher default elevation (8dp). You can find more information on the elevation page."},
	{"name": "replace", "valueDefault": "false", "type": "boolean", "description": "Setting replace prop will call router.replace() instead of router.push() when clicked, so the navigation will not leave a history record. You can find more information about the replace prop on the vue-router documentation."},
	{"name": "ripple", "valueDefault": "undefined", "type": "boolean | object", "description": "Applies the v-ripple directive."},
	{"name": "tag", "valueDefault": "'div'", "type": "string", "description": "Specify a custom tag used on the root element."},
	{"name": "target", "valueDefault": "undefined", "type": "string", "description": "Designates the target attribute. This should only be applied when using the href prop."},
	{"name": "tile", "valueDefault": "false", "type": "boolean", "description": "Removes the component's border-radius."},
	{"name": "to", "valueDefault": "undefined", "type": "string | object", "description": "Denotes the target route of the link. You can find more information about the to prop on the vue-router documentation."},
	{"name": "width", "valueDefault": "undefined", "type": "number | string", "description": "Sets the width for the component."}
]